/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 27000000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("B[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "B";
}

SIGNAL("B[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "B";
}

SIGNAL("B[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "B";
}

SIGNAL("B[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "B";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("G")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("G[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "G";
}

SIGNAL("G[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "G";
}

SIGNAL("G[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "G";
}

SIGNAL("G[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "G";
}

SIGNAL("R")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("video_on")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("column")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 11;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("column[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

SIGNAL("column[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "column";
}

TRANSITION_LIST("B[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("B[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("B[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("B[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1350000;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("G[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("G[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("G[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("G[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("R[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("R[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("R[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("R[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 27000000000.0;
	}
}

TRANSITION_LIST("video_on")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 671088640.0;
		LEVEL 1 FOR 25836912640.0;
		LEVEL 0 FOR 491998720.0;
	}
}

TRANSITION_LIST("column[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10240000000.0;
		LEVEL 1 FOR 5759959040.0;
		LEVEL 0 FOR 1199308800.0;
		LEVEL 1 FOR 3280732160.0;
		LEVEL 0 FOR 6520000000.0;
	}
}

TRANSITION_LIST("column[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5120000000.0;
			LEVEL 1 FOR 5120000000.0;
		}
		LEVEL 0 FOR 5120000000.0;
		LEVEL 1 FOR 639959040.0;
		LEVEL 0 FOR 1199308800.0;
		LEVEL 1 FOR 3280732160.0;
		LEVEL 0 FOR 5120000000.0;
		LEVEL 1 FOR 1400000000.0;
	}
}

TRANSITION_LIST("column[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2560000000.0;
			LEVEL 1 FOR 2560000000.0;
		}
		LEVEL 0 FOR 2560000000.0;
		LEVEL 1 FOR 2560000000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2560000000.0;
			LEVEL 1 FOR 2560000000.0;
		}
		LEVEL 0 FOR 1400000000.0;
	}
}

TRANSITION_LIST("column[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 1280000000.0;
			LEVEL 1 FOR 1280000000.0;
		}
		LEVEL 0 FOR 1839267840.0;
		LEVEL 1 FOR 720732160.0;
		LEVEL 0 FOR 1280000000.0;
		LEVEL 1 FOR 1280000000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1280000000.0;
			LEVEL 1 FOR 1280000000.0;
		}
		LEVEL 0 FOR 1280000000.0;
		LEVEL 1 FOR 120000000.0;
	}
}

TRANSITION_LIST("column[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 640000000.0;
			LEVEL 1 FOR 640000000.0;
		}
		LEVEL 0 FOR 1920000000.0;
		LEVEL 1 FOR 640000000.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 640000000.0;
			LEVEL 1 FOR 640000000.0;
		}
		LEVEL 0 FOR 120000000.0;
	}
}

TRANSITION_LIST("column[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 320000000.0;
			LEVEL 1 FOR 320000000.0;
		}
		LEVEL 0 FOR 320000000.0;
		LEVEL 1 FOR 319959040.0;
		LEVEL 0 FOR 1199308800.0;
		LEVEL 1 FOR 80732160.0;
		LEVEL 0 FOR 320000000.0;
		LEVEL 1 FOR 320000000.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 320000000.0;
			LEVEL 1 FOR 320000000.0;
		}
		LEVEL 0 FOR 120000000.0;
	}
}

TRANSITION_LIST("column[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 160000000.0;
			LEVEL 1 FOR 160000000.0;
		}
		LEVEL 0 FOR 160000000.0;
		LEVEL 1 FOR 159959040.0;
		LEVEL 0 FOR 1199308800.0;
		LEVEL 1 FOR 80732160.0;
		LEVEL 0 FOR 160000000.0;
		LEVEL 1 FOR 160000000.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 160000000.0;
			LEVEL 1 FOR 160000000.0;
		}
		LEVEL 0 FOR 120000000.0;
	}
}

TRANSITION_LIST("column[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 99;
			LEVEL 0 FOR 80000000.0;
			LEVEL 1 FOR 80000000.0;
		}
		LEVEL 0 FOR 80000000.0;
		LEVEL 1 FOR 79959040.0;
		LEVEL 0 FOR 1200040960.0;
		LEVEL 1 FOR 80000000.0;
		NODE
		{
			REPEAT = 60;
			LEVEL 0 FOR 80000000.0;
			LEVEL 1 FOR 80000000.0;
		}
		LEVEL 0 FOR 80000000.0;
		LEVEL 1 FOR 40000000.0;
	}
}

TRANSITION_LIST("column[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 199;
			LEVEL 0 FOR 40000000.0;
			LEVEL 1 FOR 40000000.0;
		}
		LEVEL 0 FOR 40000000.0;
		LEVEL 1 FOR 39959040.0;
		LEVEL 0 FOR 1199308800.0;
		LEVEL 1 FOR 732160.0;
		LEVEL 0 FOR 40000000.0;
		LEVEL 1 FOR 40000000.0;
		NODE
		{
			REPEAT = 121;
			LEVEL 0 FOR 40000000.0;
			LEVEL 1 FOR 40000000.0;
		}
		LEVEL 0 FOR 40000000.0;
	}
}

TRANSITION_LIST("column[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 399;
			LEVEL 0 FOR 20000000.0;
			LEVEL 1 FOR 20000000.0;
		}
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 19959040.0;
		LEVEL 0 FOR 1199308800.0;
		LEVEL 1 FOR 732160.0;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 20000000.0;
		NODE
		{
			REPEAT = 244;
			LEVEL 0 FOR 20000000.0;
			LEVEL 1 FOR 20000000.0;
		}
	}
}

TRANSITION_LIST("column[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 799;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 9959040.0;
		LEVEL 0 FOR 1199308800.0;
		LEVEL 1 FOR 732160.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 489;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "video_on";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "column";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "column[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "column[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "G";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "G[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "G[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "G[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "G[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "R";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "R[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "R[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "R[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "R[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "B[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "B[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "B[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "B[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

TIME_BAR
{
	TIME = 20150;
	MASTER = TRUE;
}
;
